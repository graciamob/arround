openapi: '3.0.0'
info:
  version: 1.0.1
  title: Podcast API
  description: Podcast API
  contact:
    name: Guillaume Lachance
paths:
  /auth/token:
    post:
      summary: Route pour créer un jeton d'authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreationPayload'
      responses:
        '200':
          description: La réponse lorsque le jeton est créé.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreationResponse'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuatreCentUn'
  /user:
    get:
      security:
        -   bearerAuth: [ ]
      summary: Retourne les informations de l'utilisateur présentement connecté
      responses:
        '200':
          description: Les informations de l'utilisateur présentement connecté
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/userGetInfo'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuatreCentUn'
        '404':
          description: Not authorized. L'utilisateur n'existe plus.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /users:
    get:
      summary: Retourne la liste des utilisateurs
      responses:
        '200':
          description: La liste des utilisateurs
          content:
            application/json:
              schema:
                type: array
                example:
                  - userid: 1
                    email: 'glachance@cmaisonneuve.qc.ca'
                  - userid: 2
                    email: 'marc@cmaisonneuve.qc.ca'
                  - userid: 3
                    email: 'e1234567@cmaisonneuve.qc.ca'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuatreCentUn'
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    TokenCreationPayload:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: 'e1234567@site.com'
        password: 'eE1234567!'
    TokenCreationResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
      example:
        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjIsIm5hbWUiOiJNYXJpZSBDdXJpZSIsImVtYWlsIjoibWFjdXJpZUBzY2llbmNlLmNvbSIsImlhdCI6MTYxOTIyNjkxNn0.Nn0SP4ZzW4jaOu_Q47Cq-NPm545zfxJmY7ww7GWyJL0'
    ErrorMessage:
      type: object
      required:
        - message
      properties:
        message:
          type: string
      example:
        message: 'Un message d''erreur descriptif.'
    QuatreCentUn:
      type: object
      required:
        - message
      properties:
        message:
          type: string
      example:
        message: 'Not Authorized.'
    UserCreationPayload:
      type: object
      required:
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        email: 'e1234567@site.com'
        password: 'eE1234567!'
    UserCreationResponse:
      type: object
      required:
        - userid
        - email
      properties:
        userid:
          type: number
        email:
          type: string
      example:
        userid: 1
        email: 'e1234567@site.com'
    User:
      type: object
      required:
        - user
      properties:
        user:
          type: object
          required:
            - userid
            - email
          properties:
            userid:
              type: number
            email:
              type: string
          example:
            userid: 1
            email: 'e1234567@site.com'
    userGetInfo:
      type: object
      required:
        - userId
        - email
      properties:
        userId:
          type: number
        email:
          type: string
      example:
        userId: 1
        email: e1234567@site.com
    HashResponse:
      type: object
      required:
        - hash
      properties:
        hash:
          type: string
      example:
        hash: '$2b$08$LmR4pF7DQaYe2YiO93OoWOap7xfQRTkwn1inNHmiJdk6wYYcLrVHa'

